<templateSet group="old">
  <template name="my_vue_el_upload_img" value="            el-upload&#10;              class=&quot;avatar-uploader&quot;&#10;              :action=&quot;uploadHost&quot;&#10;              :show-file-list=&quot;false&quot;&#10;              :on-success=&quot;handleUploadSuccess&quot;&#10;              :data=&quot;uploadData&quot;&#10;              :before-upload=&quot;beforeUpload&quot;&#10;            &gt;&#10;              &lt;img v-if=&quot;ruleForm.img&quot;&#10;                   :src=&quot;ruleForm.img&quot;&#10;                   class=&quot;avatar&quot;&gt;&#10;              &lt;i v-else class=&quot;el-icon-plus avatar-uploader-icon&quot;&gt;&lt;/i&gt;&#10;            &lt;/el-upload&gt;" description="" toReformat="false" toShortenFQNames="true" deactivated="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="my_vue_html_in_dialog" value="el-dialog&#10;    :title=&quot;dialogTitle&quot;&#10;    :visible.sync=&quot;dialogVisible&quot;&#10;    width=&quot;50%&quot;&#10;    @close=&quot;closeDialog&quot;&#10;  &gt;&#10;    &lt;el-form :model=&quot;ruleForm&quot; :rules=&quot;rules&quot; ref=&quot;ruleForm&quot; label-width=&quot;180px&quot;&gt;&#10;      &lt;el-form-item label=&quot;开户人姓名&quot; prop=&quot;name&quot;&gt;&#10;        &lt;el-input v-model=&quot;ruleForm.name&quot; class=&quot;form-input&quot;&gt;&lt;/el-input&gt;&#10;&#10;      &lt;/el-form-item&gt;&#10;      &lt;el-form-item label=&quot;开户行（包含支行名称）&quot; prop=&quot;bankName&quot;&gt;&#10;        &lt;el-input v-model=&quot;ruleForm.bankName&quot; class=&quot;form-input&quot;&gt;&lt;/el-input&gt;&#10;      &lt;/el-form-item&gt;&#10;      &lt;el-form-item label=&quot;卡号&quot; prop=&quot;bankCard&quot;&gt;&#10;        &lt;el-input v-model=&quot;ruleForm.bankCard&quot; class=&quot;form-input&quot; type=&quot;text&quot;&gt;&lt;/el-input&gt;&#10;      &lt;/el-form-item&gt;&#10;     &lt;!-- &lt;el-form-item label=&quot;币种&quot;&gt;&#10;        &lt;el-select v-model=&quot;ruleForm.coinId&quot; placeholder=&quot;币种&quot;&gt;&#10;          &lt;el-option :label=&quot;item.name&quot; @change=&quot;updateCoinType(item)&quot; :value=&quot;item.id&quot; v-for=&quot;item in coinAll&quot; :key=&quot;item.id&quot;&gt;&lt;/el-option&gt;&#10;        &lt;/el-select&gt;&#10;      &lt;/el-form-item&gt;--&gt;&#10;      &lt;el-form-item label=&quot;状态&quot;&gt;&#10;        &lt;el-switch&#10;          v-model=&quot;statusFlag&quot;&#10;          active-text=&quot;开启&quot;&#10;          inactive-text=&quot;关闭&quot;&gt;&#10;        &lt;/el-switch&gt;&#10;      &lt;/el-form-item&gt;&#10;    &lt;/el-form&gt;&#10;&#10;    &lt;span slot=&quot;footer&quot; class=&quot;dialog-footer&quot;&gt;&#10;          &lt;el-button @click=&quot;dialogVisible = false&quot;&gt;取 消&lt;/el-button&gt;&#10;          &lt;el-button type=&quot;primary&quot; @click=&quot;submitForm('ruleForm')&quot;&gt;确 定&lt;/el-button&gt;&#10;      &lt;/span&gt;&#10;  &lt;/el-dialog&gt;" description="" toReformat="false" toShortenFQNames="true" deactivated="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="my_vue_html_in_list" value="div class=&quot;common-main&quot;&gt;&#10;&#10;    &lt;!--TODO 头部--&gt;&#10;    &lt;el-form&gt;&#10;    &#10;      &lt;el-form-item&gt;&#10;        &lt;el-input&gt;&lt;/el-input&gt;&#10;      &lt;/el-form-item&gt;&#10;      &#10;      &lt;el-form-item&gt;&#10;        &lt;el-input&gt;&lt;/el-input&gt;&#10;      &lt;/el-form-item&gt;&#10;&#10;      &lt;el-form-item&gt;&#10;        &lt;el-select&gt;&#10;          &lt;el-option&gt;&lt;/el-option&gt;&#10;        &lt;/el-select&gt;&#10;      &lt;/el-form-item&gt;&#10;&#10;      &lt;el-form-item&gt;&#10;        &lt;el-date-picker&gt;&#10;        &lt;/el-date-picker&gt;&#10;      &lt;/el-form-item&gt;&#10;&#10;      &lt;div&gt;&#10;        &lt;el-button&gt;搜索&lt;/el-button&gt;&#10;        &lt;el-button&gt;新建&lt;/el-button&gt;&#10;      &lt;/div&gt;&#10;&#10;    &lt;/el-form&gt;&#10;&#10;    &lt;!--TODO 中部--&gt;&#10;    &lt;el-table&gt;&#10;      &lt;el-table-column&gt;&lt;/el-table-column&gt;&#10;      &lt;el-table-column&gt;&lt;/el-table-column&gt;&#10;      &lt;el-collapse-item&gt;&#10;        &lt;template slot-scope=&quot;scope&quot;&gt;&#10;          &lt;span&gt;{{scope.row.my_msg}}&lt;/span&gt;&#10;        &lt;/template&gt;&#10;      &lt;/el-collapse-item&gt;&#10;    &lt;/el-table&gt;&#10;&#10;    &lt;!--TODO 底部--&gt;&#10;    &lt;el-pagination&gt;&#10;&#10;    &lt;/el-pagination&gt;&#10;&#10;    &lt;!--TODO 完结--&gt;&#10;&lt;/div&gt;" description="非常完善的带查询、分页功能的【Vue表格】。" toReformat="true" toShortenFQNames="true" deactivated="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="my_vue_script_in_dialog" value="//  import Tinymce from '@/components/Tinymce'&#10;//  import {paramConfigApi} from '@/api/paramConfigApi'&#10;//  import dialogMixin from '@/components/mixin/dialog-mixin'&#10;//  import { mapGetters } from 'vuex'&#10;&#10;  export default {&#10;    //顺序①&#10;    components: {/*Tinymce*/},&#10;    //顺序②&#10;    filters:{},&#10;    //顺序③&#10;    mixins: [dialogMixin],&#10;    //顺序④&#10;    props:{},&#10;    //顺序⑤&#10;    data() {&#10;      return {&#10;        dialogTitle: '新建银行卡',&#10;        coinAll: '',&#10;        rules: {&#10;          name: [&#10;            {required: true, message: '请输入开户人姓名', trigger: 'blur'}&#10;          ],&#10;          bankName: [&#10;            {required: true, message: '请输入开户行名称', trigger: 'blur'}&#10;          ],&#10;          bankCard: [&#10;            {required: true, message: '请输入卡号', trigger: 'blur'}&#10;          ]&#10;        },&#10;        ruleForm: {&#10;          coinId: null,&#10;          coinName: null,&#10;          status: null&#10;        },&#10;        statusFlag: ''&#10;      }&#10;    },&#10;    //顺序⑥&#10;    computed: {&#10;      ...mapGetters(['getCoinAll'])&#10;    },&#10;    //顺序⑦&#10;    watch: {&#10;      dialogType(val) {&#10;        if (val === 1) {&#10;          this.statusFlag = 0&#10;          this.dialogTitle = '新建银行卡'&#10;        } else {&#10;          this.dialogTitle = '编辑银行卡'&#10;        }&#10;      },&#10;      statusFlag(val) {&#10;        if (val) {&#10;          this.ruleForm.status = 1&#10;        } else {&#10;          this.ruleForm.status = 0&#10;        }&#10;      }&#10;    },&#10;    //顺序⑧&#10;    mounted() {&#10;      this.coinAll = this.getCoinAll&#10;    },&#10;    updated() {},&#10;    activated() {},&#10;    //顺序⑨&#10;    methods: {&#10;      editCallback(row) {&#10;        this.ruleForm.coinId = row.coinId !== null ? row.coinId.toString() : '0'&#10;        this.statusFlag = row.status === 1&#10;      },&#10;&#10;      updateCoinType(item) {&#10;        this.ruleForm.coinId = item.id&#10;        this.ruleForm.coinName = item.name&#10;      },&#10;&#10;      createCallback() {&#10;        this.updateRuleForm()&#10;        return paramConfigApi.createBank(this.ruleForm)&#10;      },&#10;&#10;      updateRuleForm() {&#10;        this.ruleForm.status ? this.ruleForm.status = 1 : this.ruleForm.status = 0&#10;        for (let i = 0; i &lt; this.coinAll.length; i++) {&#10;          if (this.ruleForm.coinId === this.coinAll[i].id) {&#10;            this.ruleForm.coinName = this.coinAll[i].name&#10;          }&#10;        }&#10;      },&#10;&#10;      updateCallback() {&#10;        this.updateRuleForm()&#10;        return paramConfigApi.updateBank(this.ruleForm)&#10;      }&#10;    },&#10;    //未完待续&#10;  }" description="" toReformat="false" toShortenFQNames="true" deactivated="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
  <template name="my_vue_script_in_list" value="//  import Tinymce from '@/components/Tinymce'&#10;//  import {paramConfigApi} from '@/api/paramConfigApi'&#10;//  import dialogMixin from '@/components/mixin/dialog-mixin'&#10;//  import { mapGetters } from 'vuex'&#10;&#10;export default {&#10;    //顺序①&#10;    components: {/*articleDialog*/},&#10;    //顺序②&#10;    filters:{},&#10;    //顺序③&#10;    mixins: [/*commonMixin*/],&#10;    //顺序④&#10;    props:{},&#10;    //顺序⑤&#10;    data() {&#10;      return {&#10;        rules: {},&#10;        ruleForm: {},&#10;      }&#10;    },&#10;    //顺序⑥&#10;    computed:{},&#10;    //顺序⑦&#10;    watch:{},&#10;    //顺序⑧&#10;    mounted:{},&#10;    updated:{},&#10;    activated:{},&#10;    //顺序⑨&#10;    methods: {&#10;      listCallback() {&#10;        //TODO 写下【获取数据】接口&#10;        //return noticeApi.getNoticeList(this.ruleForm,/*ruleForm里面，是已填写的筛选条件。当然，你可以不填任何筛选条件。*/&#10;        //  this.listQuery.current, this.listQuery.size)&#10;      },&#10;      deleteCallback(ids) {&#10;        //TODO 写下【删除】接口&#10;        //return noticeApi.deleteNotice(ids)&#10;      },&#10;      handleCreate() {&#10;        //TODO 写下【新加对话框】的弹出方法&#10;        //this.$refs.articleDialog.showDialog(1, {})&#10;      },&#10;      handleEdit(index, row) {&#10;        //TODO 写下【编辑/查看对话框】的弹出方法&#10;        //this.$refs.articleDialog.showDialog(2, Object.assign({}, row))&#10;      },&#10;      async changeStatusCallback(id, status) {&#10;        //TODO 写下【更改状态】接口&#10;        // return await coinConfigApi.setStatus({&#10;        //   id,&#10;        //   status,&#10;        // })&#10;      },&#10;    }&#10;    //未完待续&#10; }" description="非常基础的，带各种方法继承，与基本参数的【Vue实例对象】。" toReformat="false" toShortenFQNames="true" deactivated="true">
    <context>
      <option name="OTHER" value="true" />
    </context>
  </template>
</templateSet>